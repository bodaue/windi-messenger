"""Remove GroupMembers

Revision ID: 56cc1d5555b8
Revises: 5c69d2330eaf
Create Date: 2025-02-22 22:04:06.057132

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "56cc1d5555b8"
down_revision: str | None = "5c69d2330eaf"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_group_members_group", table_name="group_members")
    op.drop_index("idx_group_members_user", table_name="group_members")
    op.drop_table("group_members")
    op.add_column(
        "chat_members",
        sa.Column(
            "joined_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.create_unique_constraint(None, "chats", ["group_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "chats", type_="unique")
    op.drop_column("chat_members", "joined_at")
    op.create_table(
        "group_members",
        sa.Column("group_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "joined_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
            name="group_members_group_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="group_members_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="group_members_pkey"),
        sa.UniqueConstraint("group_id", "user_id", name="uq_group_member"),
    )
    op.create_index(
        "idx_group_members_user", "group_members", ["user_id"], unique=False
    )
    op.create_index(
        "idx_group_members_group", "group_members", ["group_id"], unique=False
    )
    # ### end Alembic commands ###
